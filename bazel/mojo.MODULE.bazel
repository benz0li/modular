"""Define the Mojo toolchain"""

PACKAGE_VERSION = "25.6.0.dev2025081619"

# NOTE: Used internally when pushing new releases
BASE_URL = "https://dl.modular.com/public/nightly/python"

mojo = use_extension("@rules_mojo//mojo:extensions.bzl", "mojo")
mojo.toolchain(
    base_url = BASE_URL,
    use_prebuilt_packages = False,
    version = PACKAGE_VERSION,
)
use_repo(mojo, "mojo_toolchains")

http_file = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_file")
http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

_PLATFORM_MAPPINGS = {
    "linux_aarch64": "manylinux_2_34_aarch64",
    "linux_x86_64": "manylinux_2_34_x86_64",
    "macos_arm64": "macosx_13_0_arm64",
    # "": "any",
}

_WHEELS = [
    ("max", _PLATFORM_MAPPINGS.keys()),
    #("mblack", [""]),
]

[
    [
        http_file(
            name = name + "_" + platform + "_wheel",
            downloaded_file_path = "{}-{}-py3-none-{}.whl".format(
                name,
                PACKAGE_VERSION,
                _PLATFORM_MAPPINGS[platform],
            ),
            url = "{}/{}-{}-py3-none-{}.whl".format(
                BASE_URL,
                name,
                PACKAGE_VERSION,
                _PLATFORM_MAPPINGS[platform],
            ),
        )
        for platform in platforms
    ]
    for name, platforms in _WHEELS
]

rebuild_wheel = use_repo_rule("//bazel:rebuild_wheel.bzl", "rebuild_wheel")

[
    rebuild_wheel(
        name = "module_platlib_" + platform,
        version = PACKAGE_VERSION,
        platform = platform,
        base_url = BASE_URL,
    )
    for platform in _PLATFORM_MAPPINGS.keys()
]
